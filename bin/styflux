#!/usr/bin/env node

/**
 * Module dependencies.
 */
var styflux=require("../lib/styflux"),
	routes={
		"config":{
			"config.json":"@conf",
			"config.sample":"@confSample"
		},
		"library":{
			"styflux":{
				"styflux.styl":"@styStyStyflux",
				"fonts":{
					"fonts.styl":"@styStyFonts"
				},
				"prefix":{
					"prefix.styl":"@styStyPrefix"
				}
			}
		},
		"layouts":{
			"layouts.styl":""
		},
		"view-helpers":{
			"buttons":"",
			"content":"",
			"fonts":"",
			"forms":"",
			"grids":"",
			"hacks":"",
			"reset":"",
			"resources":""
		},
		"views":"",
		"node_modules":{
			"styflux":{
				"index.js":"@styIndex",
				"package.json":"@styPjson",
				"README.md":"@styReadme",
				"lib":{
					"styflux.js":"@styLibStyflux"
				}
			}
		},
		"init.njs":"@init"
	},
	usage=[
		  ''
		, ' Usage: styflux  [options] [file|dir ...]'
		, ''
		, ' Options:'
		, ''
		, ' -h, --help       Display help information'
		, ' -c, --create     Create a Styflux project'
		, ' -v, --version    Display the version of stylux'
		, ' -w, --watch      Watch files for changes and automatically re-render'
	].join('\n'),
	args = process.argv.slice(2).join(" ");

switch(args){
	case "-c":
	case "--create":
		styflux.createProject(routes,".",__dirname+"/../lib/resources");
		break;
	case "-w":
	case "-watch":
		styflux.watchProject(".");
		break;
	case "-v":
	case "--version":
		console.log(JSON.parse(fs.readFileSync(__dirname + "/../package.json")).version);
		break;
	case "-h":
	case "--help":
		console.log(usage);
	default:
		console.log("\n Incorrect expression");
		console.log(usage);
}